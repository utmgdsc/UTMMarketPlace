# generated by fastapi-codegen:
#   filename:  OpenAPI.yaml
#   timestamp: 2025-03-09T01:39:49+00:00

from __future__ import annotations

from typing import Optional, Union

from fastapi import FastAPI

from .models import (
    ErrorResponse,
    ListingGetResponseItem,
    ListingsGetResponseAll,
    ListingsPostRequest,
    ListingsPostResponse,
    LogInPostRequest,
    LogInPostResponse,
    SignUpPostRequest,
    SignUpPostResponse,
)

app = FastAPI(
    title='UTM Marketplace API',
    description='API specification for a campus-wide marketplace app',
    version='1.0.0',
    servers=[
        {'url': 'https://api.utmmarketplace.com', 'description': 'Production Server'},
        {'url': 'http://localhost:5000', 'description': 'Local Development Server'},
    ],
)


@app.get(
    '/listing',
    response_model=ListingGetResponseItem,
    responses={
        '400': {'model': ErrorResponse},
        '404': {'model': ErrorResponse},
        '422': {'model': ErrorResponse},
        '500': {'model': ErrorResponse},
    },
)
def get_listing(listing_id: str) -> Union[ListingGetResponseItem, ErrorResponse]:
    """
    Retrieve a single listing by ID
    """
    pass


@app.get(
    '/listings',
    response_model=ListingsGetResponseAll,
    responses={'500': {'model': ErrorResponse}},
)
def get_listings() -> Union[ListingsGetResponseAll, ErrorResponse]:
    """
    Retrieve all listings
    """
    pass


@app.post(
    '/listings',
    response_model=None,
    responses={
        '201': {'model': ListingsPostResponse},
        '422': {'model': ErrorResponse},
        '500': {'model': ErrorResponse},
    },
)
def post_listings(
    body: ListingsPostRequest,
) -> Optional[Union[ListingsPostResponse, ErrorResponse]]:
    """
    Create a new listing
    """
    pass


@app.post(
    '/login',
    response_model=LogInPostResponse,
    responses={'400': {'model': ErrorResponse}, '422': {'model': ErrorResponse}},
)
def post_login(body: LogInPostRequest) -> Union[LogInPostResponse, ErrorResponse]:
    """
    Log in a user
    """
    pass


@app.post(
    '/sign-up',
    response_model=None,
    responses={
        '201': {'model': SignUpPostResponse},
        '400': {'model': ErrorResponse},
        '409': {'model': ErrorResponse},
        '422': {'model': ErrorResponse},
        '500': {'model': ErrorResponse},
    },
)
def post_sign_up(
    body: SignUpPostRequest,
) -> Optional[Union[SignUpPostResponse, ErrorResponse]]:
    """
    Sign up a new user
    """
    pass
