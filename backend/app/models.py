# generated by fastapi-codegen:
#   filename:  OpenAPI.yaml
#   timestamp: 2025-02-16T02:44:10+00:00

from __future__ import annotations

from typing import Optional

from pydantic import BaseModel, EmailStr, Field, SecretStr


class SignUpPostRequest(BaseModel):
    email: EmailStr = Field(..., description='Must be a valid University of Toronto email.', example='student@utoronto.ca')
    password: SecretStr = Field(..., description='Must be at least 8 characters, contain 1 uppercase letter, 1 number.', example='P@ssword123')

# Keep "Optional" only for these responses
class SignUpPostResponse(BaseModel):
    user_id: Optional[int] = Field(None, example=42)
    message: Optional[str] = Field(None, example='User registered successfully.')

class SignUpPostResponse1(BaseModel):
    error: Optional[str] = Field(None, example='Invalid email format. Please use a UofT email.')

class SignUpPostResponse2(BaseModel):
    error: Optional[str] = Field(None, example='Email already registered.')

# Remove Optional from other models
class ListingsGetResponseItem(BaseModel):
    id: int
    title: str
    price: float
    description: str
    seller_id: int = Field(..., example=101)

class ListingsPostRequest(BaseModel):
    title: str
    price: float
    description: str
    seller_id: int

class ListingsPostResponse(BaseModel):
    id: int
    title: str
    price: float
    description: str
