# generated by fastapi-codegen:
#   filename:  OpenAPI.yaml
#   timestamp: 2025-02-24T19:46:32+00:00

from __future__ import annotations

from datetime import datetime
from typing import List, Optional

from pydantic import BaseModel, EmailStr, Field, SecretStr


class Field500ErrorResponse(BaseModel):
    error: Optional[str] = Field(
        None, example='Internal Server Error. Please try again later.'
    )


class ListingsGetResponseItem(BaseModel):
    id: str = Field(..., example='1')
    title: str = Field(..., example='MacBook Pro for sale')
    price: float = Field(..., example=1200.99)
    description: Optional[str] = Field(
        None, example='Selling my MacBook Pro in great condition!'
    )
    seller_id: str = Field(..., example='101')
    pictures: Optional[List[str]] = None
    category: Optional[str] = Field(None, example='Electronics')
    date_posted: Optional[datetime] = Field(None, example='2025-02-22T10:00:00Z')
    campus: Optional[str] = Field(None, example='UTM')


class ListingsGetAllResponse(BaseModel):
    listings: Optional[List[ListingsGetResponseItem]] = None
    total: Optional[int] = Field(None, example=10)


class ListingsPostRequest(BaseModel):
    title: str = Field(..., min_length=3, example='Gaming Laptop for sale')
    price: float = Field(..., gt=0, example=899.99)
    description: Optional[str] = Field(
        None, example='Lightly used gaming laptop, great condition!'
    )
    seller_id: str = Field(..., example='101')
    pictures: Optional[List[str]] = None
    category: Optional[str] = Field(None, example='Electronics')
    date_posted: Optional[datetime] = Field(None, example='2025-02-22T10:00:00Z')
    campus: str = Field(..., example='UTM')


class ListingsPostResponse(BaseModel):
    id: str = Field(..., example='10')
    title: Optional[str] = Field(None, example='Gaming Laptop for sale')
    price: Optional[float] = Field(None, example=899.99)
    description: Optional[str] = Field(
        None, example='Lightly used gaming laptop, great condition!'
    )
    seller_id: Optional[str] = Field(None, example='101')
    pictures: Optional[List[str]] = None
    category: Optional[str] = Field(None, example='Electronics')
    date_posted: Optional[datetime] = Field(None, example='2025-02-22T10:00:00Z') # need to decide on the date format
    campus: Optional[str] = Field(None, example='UTM')


class SignUpPostRequest(BaseModel):
    email: EmailStr = Field(
        ...,
        description='Must be a valid University of Toronto email (utoronto.ca or mail.utoronto.ca).',
        example='student@utoronto.ca',
    )
    password: SecretStr = Field(
        ...,
        description='Must be at least 8 characters, contain 1 uppercase letter, 1 number.',
        example='P@ssword123',
    )


class SignUpPostResponse(BaseModel):
    user_id: int = Field(..., example=42)
    message: Optional[str] = Field(None, example='User registered successfully.')


class SignUpPostResponse1(BaseModel):
    error: str = Field(..., example='Invalid email format. Please use a UofT email.')


class SignUpPostResponse2(BaseModel):
    error: str = Field(..., example='Email already registered.')


class ListingGetResponse(BaseModel):
    error: Optional[str] = Field(
        None, example='Invalid listing ID format. Must be a valid ObjectId.'
    )


class ListingGetResponse1(BaseModel):
    error: Optional[str] = Field(None, example='Listing not found.')
